# Global settings
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # TLS settings following best practices
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# HTTP frontend - listen on port 80, redirect all to HTTPS
frontend mdhieu.tech-http-frontend
    bind *:80
    # Redirect any HTTP traffic to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS frontend - listen on port 443 with SSL termination
frontend mdhieu.tech-https-frontend
    bind *:443 ssl crt /etc/ssl/mdhieu.tech.pem
    # Add header to indicate HTTPS protocol to backend
    http-request set-header X-Forwarded-Proto https
    default_backend mdhieu.tech-backend

# Backend servers serving HTTP (unsecured) behind HAProxy
backend mdhieu.tech-backend
    balance roundrobin
    option forwardfor
    server 6661-web-01 52.91.19.144:80 check
    server 6661-web-02 13.221.66.135:80 check
